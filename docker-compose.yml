version: "3.9"  # optional since v1.27.0
services:
  web:
    container_name: 'web'
    build: ./backend
    env_file:
      - backend/.env
    environment:
      - SERVER_MODE=dev
      - HOST=0.0.0.0
      - PORT=8080
      - DBUSER=user
      - DBPASSWORD=pass
      - DBNAME=db
      - DBHOST=web-db
      - DBPORT=5432
      - DBSSLMODE=disable
      - QUEUE_HOST=rabbitmq
      - QUEUE_PORT=5672
      - QUEUE_USER=guest
      - QUEUE_PASS=guest
      - CACHE_HOST=web-cache
      - CACHE_PORT=6379
#      - DNS_SERVER=
    depends_on:
      - web-db
      - web-cache
      - rabbitmq
    links:
      - web-db
      - web-cache
      - rabbitmq

  consumer:
    container_name: 'consumer'
    build: ./consumer
    environment:
      - SERVER_ADDR=nginx
      - QUEUE_HOST=rabbitmq
      - QUEUE_PORT=5672
      - QUEUE_USER=guest
      - QUEUE_PASS=guest
      - DBUSER=user
      - DBPASSWORD=pass
      - DBNAME=db
      - DBHOST=web-db
      - DBPORT=5432
      - DBSSLMODE=disable
    depends_on:
      - rabbitmq
      - nginx
      - web-cache
    links:
      - nginx
      - web-cache
    restart: unless-stopped

  emailsender:
    container_name: 'emailsender'
    build: ./EmailSender
    environment:
      - DBUSER=user
      - DBPASSWORD=pass
      - DBNAME=db
      - DBHOST=web-db
      - DBPORT=5432
      - DBSSLMODE=disable
      - Ticker=5
    depends_on:
      - web-db
    links:
      - web-db
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    container_name: 'rabbitmq'
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
      interval: 30s
      timeout: 10s
      retries: 5

  web-db:
    container_name: 'web-db'
    image: postgres:12
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=db
    ports:
      - "5432:5432"
    volumes:
      - ./storage/postgresql/data:/var/lib/postgresql/data
    restart: unless-stopped

  web-cache:
    container_name: 'web-cache'
    image: "redis:alpine"
    ports:
      - "6380:6379"
    restart: unless-stopped

  nginx:
    # specifies the latest nginx image
    image: nginx:latest
    # Connects the conf file of the container to the conf file in our folder
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    # It will start up the nginx only when all api containers have started
    depends_on:
      - web
    # Connects the port 80 of the nginx container to localhost:80 or localhost
    ports:
      - "80:80"
    links:
      - web